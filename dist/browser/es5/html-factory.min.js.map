{"version":3,"file":"html-factory.min.js","sources":["html-factory.min.js"],"sourcesContent":["\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nvar HtmlFactory = function () {\n  /*\n  $childType: undefined | null | boolean | number | string | Node | $elementOptionsType;\n  \n  $childrenType: $childType | [$childType];\n  \n  makeFragment: function (\n  \toptions: object {\n  \t\tchildren: $childrenType,\n  \t\tcallback: undefined | null | function (fragment: DocumentFragment) => void\n  \t}\n  ) => DocumentFragment;\n  */\n  function makeFragment(_ref) {\n    var children = _ref.children,\n        callback = _ref.callback;\n    var fragment = document.createDocumentFragment();\n\n    if (!Array.isArray(children)) {\n      children = [children];\n    }\n\n    for (var index = 0, length = children.length; index < length; index++) {\n      var child = children[index];\n\n      if (child == null) {\n        continue;\n      }\n\n      if (_typeof(child) === 'object' && child.name) {\n        child = makeElement(child);\n      }\n\n      if (!(child instanceof Node)) {\n        if (typeof child !== 'string') {\n          child = String(child);\n        }\n\n        child = document.createTextNode(child);\n      }\n\n      fragment.appendChild(child);\n    }\n\n    if (callback != null) {\n      callback(fragment);\n    }\n\n    return fragment;\n  }\n  /*\n  $attributesType: object {\n  \t[property: string]: undefined | null | boolean | number | string\n  };\n  \n  $elementOptionsType: object {\n  \tnamespace: undefined | null | string,\n  \tname: string,\n  \tattributes: $attributesType,\n  \tchildren: $childrenType,\n  \tcallback: undefined | null | function (element: Element) => void\n  };\n  \n  makeElement: function (\n  \toptions: $elementOptionsType\n  ) => Element;\n  */\n\n\n  function makeElement(_ref2) {\n    var namespace = _ref2.namespace,\n        name = _ref2.name,\n        attributes = _ref2.attributes,\n        children = _ref2.children,\n        callback = _ref2.callback;\n    var element = namespace == null ? document.createElement(name) : document.createElementNS(namespace, name);\n\n    if (attributes != null) {\n      for (var key in attributes) {\n        var value = attributes[key];\n\n        if (value == null) {\n          continue;\n        }\n\n        element.setAttribute(key, value);\n      }\n    }\n\n    if (children != null) {\n      element.appendChild(makeFragment({\n        children: children\n      }));\n    }\n\n    if (callback != null) {\n      callback(element);\n    }\n\n    return element;\n  }\n  /*\n  $selectorOptionsType: object {\n  \t[selector: string]: undefined | null | $attributesType\n  };\n  \n  makeStyleString: function (\n  \toptions: $attributesType | $selectorOptionsType | object {\n  \t\t[media: string]: undefined | null | $selectorOptionsType\n  \t}\n  ) => string;\n  */\n\n\n  function makeStyleString(options) {\n    var styleArray = [];\n\n    for (var key in options) {\n      var value = options[key];\n\n      if (value == null) {\n        continue;\n      }\n\n      if (_typeof(value) === 'object') {\n        styleArray.push(\"\".concat(key, \" { \").concat(makeStyleString(value), \" }\"));\n        continue;\n      }\n\n      styleArray.push(\"\".concat(key, \": \").concat(value, \";\"));\n    }\n\n    return styleArray.join(' ');\n  }\n\n  return {\n    makeFragment: makeFragment,\n    makeElement: makeElement,\n    makeStyleString: makeStyleString\n  };\n}();\n/* exported HtmlFactory */"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","HtmlFactory","makeFragment","_ref","children","callback","fragment","document","createDocumentFragment","index","length","Array","isArray","child","name","makeElement","Node","String","createTextNode","appendChild","_ref2","namespace","attributes","element","createElement","createElementNS","key","value","setAttribute","makeStyleString","options","styleArray","push","concat","join"],"mappings":"aAEA,SAASA,QAAQC,GAAkC,OAAOD,QAAU,mBAAqBE,QAAU,iBAAmBA,OAAOC,SAAW,SAAUF,GAAO,cAAcA,GAAS,SAAUA,GAAO,OAAOA,GAAO,mBAAqBC,QAAUD,EAAIG,cAAgBF,QAAUD,IAAQC,OAAOG,UAAY,gBAAkBJ,IAAgBA,GAEzU,IAAIK,YAAc,WAahB,SAASC,EAAaC,GASpB,IARA,IAAIC,EAAWD,EAAKC,SAChBC,EAAWF,EAAKE,SAChBC,EAAWC,SAASC,yBAMfC,EAAQ,EAAGC,GAHlBN,EADGO,MAAMC,QAAQR,GAIUA,EAHhB,CAACA,IAGwBM,OAAQD,EAAQC,EAAQD,IAAS,CACrE,IAAII,EAAQT,EAASK,GAER,MAATI,KAKFA,EADqB,WAAnBlB,QAAQkB,IAAuBA,EAAMC,KAC/BC,EAAYF,GAGhBA,aAAiBG,OACA,iBAAVH,IACTA,EAAQI,OAAOJ,IAGjBA,EAAQN,SAASW,eAAeL,IAGlCP,EAASa,YAAYN,IAOvB,OAJgB,MAAZR,GACFA,EAASC,GAGJA,EAqBT,SAASS,EAAYK,GACnB,IAAIC,EAAYD,EAAMC,UAClBP,EAAOM,EAAMN,KACbQ,EAAaF,EAAME,WACnBlB,EAAWgB,EAAMhB,SACjBC,EAAWe,EAAMf,SACjBkB,EAAuB,MAAbF,EAAoBd,SAASiB,cAAcV,GAAQP,SAASkB,gBAAgBJ,EAAWP,GAErG,GAAkB,MAAdQ,EACF,IAAK,IAAII,KAAOJ,EAAY,CAC1B,IAAIK,EAAQL,EAAWI,GAEV,MAATC,GAIJJ,EAAQK,aAAaF,EAAKC,GAc9B,OAVgB,MAAZvB,GACFmB,EAAQJ,YAAYjB,EAAa,CAC/BE,SAAUA,KAIE,MAAZC,GACFA,EAASkB,GAGJA,EAoCT,MAAO,CACLrB,aAAcA,EACda,YAAaA,EACbc,gBAxBF,SAASA,EAAgBC,GACvB,IAESJ,EAFLK,EAAa,GAEjB,IAASL,KAAOI,EAAS,CACvB,IAAIH,EAAQG,EAAQJ,GAEP,MAATC,IAImB,WAAnBhC,QAAQgC,GACVI,EAAWC,KAAK,GAAGC,OAAOP,EAAK,OAAOO,OAAOJ,EAAgBF,GAAQ,OAIvEI,EAAWC,KAAK,GAAGC,OAAOP,EAAK,MAAMO,OAAON,EAAO,OAGrD,OAAOI,EAAWG,KAAK,OApIT"}